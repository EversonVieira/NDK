@inherits NDKBaseInput<DateTime>

<div class="ndk-component ndk-calendar-container @GetClass()">

    @if (!ShowMonthPicker && !ShowYearPicker)
    {
        <div class="ndk-calendar-controlers">

            <span class="ndk-calendar-control" @onclick="(() => OpenYear())">@Options.Year</span>
            @if (NDKMonthPickerRef is not null && NDKMonthPickerRef.MonthAlias.ContainsKey(Options.Month))
            {
                <span class="ndk-calendar-control" @onclick="(() => OpenMonth())">@NDKMonthPickerRef.MonthAlias[Options.Month]</span>
            }


            <NDKButton Id="ndkcalendartodaybutton" OnClick="OnClickHandlerAsync">@Options.TodayAlias</NDKButton>
            <NDKButton Id="ndkcalendarclearbutton" OnClick="OnClear">@Options.Clear</NDKButton>
        </div>


        <table class="ndk-calendar">
            <tr class="ndk-dt-header-ui">
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.SundayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.MondayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.TuesdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.WednesdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.ThursdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.FridayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.SaturdayAlias
                    </span>
                </th>
            </tr>
            @{
                foreach (var item in DataSource)
                {
                    bool isPair = DataSource.IndexOf(item) % 2 == 0;
                    <tr class="@($"ndk-dt-row-ui {(isPair ? "ndk-dt-row-pair-ui":"")}")">
                        @{
                            foreach (var dayModel in item.DayList)
                            {
                                <td class="ndk-dt-container-ui">
                                    <span class="@($"ndk-dt-item-ui {(dayModel.IsSelected ? "ndk-dt-item-selected-ui" : "")} {(dayModel.ShowEmpty ? "ndk-dt-item-ui-disabled":"")}")"
                                          onclick="@(() => OnDaySelect(dayModel))">
                                        @(!dayModel.ShowEmpty ? dayModel.Day.ToString() : "-")
                                    </span>
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </table>
    }

    <CascadingValue Value="this">
        <NDKMonthPicker @ref="NDKMonthPickerRef" Value="Options.Month" ValueChanged="OnMonthUpdate"></NDKMonthPicker>
        <NDKYearPicker  @ref="NDKYearPickerRef" Value="Options.Year" ValueChanged="OnYearUpdate"></NDKYearPicker>
    </CascadingValue>
</div>

