@inherits NDKBaseInput<DateTime>
@if (!ShowMonthPicker && !ShowYearPicker)
{
    <div class="ndk-calendar-container match-calendar @GetClass()">


        <div class="ndk-calendar-controllers">

            <span class="ndk-calendar-control" @onclick="(() => OpenYear())">@Options.Year</span>
            @if (NDKMonthPickerRef is not null && NDKMonthPickerRef.MonthAlias.ContainsKey(Options.Month))
            {
                <span class="ndk-calendar-control" @onclick="(() => OpenMonth())">@NDKMonthPickerRef.MonthAlias[Options.Month]</span>
            }
         
        </div>


        <table class="ndk-calendar">
            <tr class="ndk-dt-header-ui">
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.SundayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.MondayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.TuesdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.WednesdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.ThursdayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.FridayAlias
                    </span>
                </th>
                <th class="ndk-dt-header-m-ui">
                    <span class="ndk-dt-item-ui">
                        @Options.SaturdayAlias
                    </span>
                </th>
            </tr>
            @{
                foreach (var item in DataSource)
                {
                    bool isPair = DataSource.IndexOf(item) % 2 == 0;
                    <tr class="@($"ndk-dt-row-ui {(isPair ? "ndk-dt-row-pair-ui":"")}")">
                        @{
                            foreach (var dayModel in item.DayList)
                            {
                                <td class="ndk-dt-container-ui">
                                    <span class="@($"ndk-dt-item-ui {(dayModel.IsSelected ? "ndk-dt-item-selected-ui" : "")} {(dayModel.ShowEmpty ? "ndk-dt-item-ui-disabled":"")}")"
                                          onclick="@(() => OnDaySelect(dayModel))">
                                        @(!dayModel.ShowEmpty ? dayModel.Day.ToString() : "-")
                                    </span>
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </table>


        <div class="ndk-calendar-controllers">
            <span class="ndk-calendar-control" @onclick="(() => OnClickHandlerAsync())">@Options.TodayAlias</span>
            <span class="ndk-calendar-control" @onclick="(() => OnClear())">@Options.Clear</span>

        </div>
    </div>

}

<CascadingValue Value="this">
    <NDKMonthPicker Class="match-calendar" @ref="NDKMonthPickerRef" Value="Options.Month" ValueChanged="OnMonthUpdate"></NDKMonthPicker>
    <NDKYearPicker Class="match-calendar" @ref="NDKYearPickerRef" Value="Options.Year" ValueChanged="OnYearUpdate"></NDKYearPicker>
</CascadingValue>